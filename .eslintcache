[{"C:\\Users\\Milla\\Desktop\\name-app\\src\\index.js":"1","C:\\Users\\Milla\\Desktop\\name-app\\src\\App.js":"2","C:\\Users\\Milla\\Desktop\\name-app\\src\\reportWebVitals.js":"3","C:\\Users\\Milla\\Desktop\\name-app\\src\\components\\Listing.js":"4","C:\\Users\\Milla\\Desktop\\name-app\\src\\components\\Single.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":1088,"mtime":1610787682797,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":4397,"mtime":1610787609661,"results":"10","hashOfConfig":"7"},{"size":954,"mtime":1611513038828,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1kkayov",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Milla\\Desktop\\name-app\\src\\index.js",[],["24","25"],"C:\\Users\\Milla\\Desktop\\name-app\\src\\App.js",[],"C:\\Users\\Milla\\Desktop\\name-app\\src\\reportWebVitals.js",[],"C:\\Users\\Milla\\Desktop\\name-app\\src\\components\\Listing.js",["26"],"import React from 'react'\r\nimport nameData from '../data/names.json'\r\nimport { VictoryPie } from 'victory';\r\nimport './listing.css'\r\nimport {BrowserRouter as  Route, Link} from 'react-router-dom';\r\nimport Single from './Single'\r\n\r\n\r\nclass Listing extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            value_dd: \"satunnainen\" ,\r\n            valueForm: ''};\r\n    \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChangeForm = this.handleChangeForm.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n      \r\n      \r\n  handleChangeForm(event) {\r\n    this.setState({valueForm: event.target.value});\r\n    console.log(this.state.valueForm)\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    console.log(this.state.valueForm)\r\n    alert(this.state.valueForm);\r\n    \r\n\r\n  }\r\n      handleChange(event) {\r\n        \r\n        this.setState({value_dd: event.target.value})\r\n    \r\n        //Sorting the names randomly\r\n        if(event.target.value_dd===\"satunnainen\") {\r\n          var lista = this.shuffleRandom(nameData.names)\r\n          return lista;\r\n        }\r\n        //Sorting the list in decreasing order due to amounts\r\n        else if(event.target.value_dd===\"määrä\") {\r\n          lista = nameData.names.sort((a, b) => b.amount - a.amount);\r\n          return lista;\r\n        } \r\n        //Sorting the list in alphapetical order\r\n        else {\r\n          lista = nameData.names.sort( (a, b) => this.compareNames(a.name , b.name)\r\n          );\r\n          return lista;\r\n        }\r\n      };\r\n    \r\n      //Sorting using math.random\r\n      shuffleRandom(lista) {\r\n       \r\n        var ctr = nameData.names.length, temp, index;\r\n    \r\n        while(ctr > 0) {\r\n          index = Math.floor(Math.random() * ctr);\r\n          ctr --;\r\n          temp = lista[ctr];\r\n          lista[ctr] = lista[index];\r\n          lista[index] = temp;\r\n        } \r\n        return lista;\r\n      }\r\n    \r\n       compareNames(a, b) {\r\n        // Assuming you want case-insensitive comparison\r\n        a = a.toLowerCase();\r\n        b = b.toLowerCase();\r\n        return (a < b) ? -1 : (a > b) ? 1 : 0;\r\n      };\r\n    \r\n      sumAmounts(nameData) {\r\n        for (var i=0; i<nameData.names.length; i++) {\r\n           //nameData.names.amount[i];\r\n          //console.log(nameData.names.amount[8])\r\n        }\r\n        var sum=0;\r\n        if(typeof nameData == 'object'){\r\n          nameData.names.forEach(names => {\r\n              sum += parseFloat(names.amount);\r\n          });\r\n      }\r\n        return sum;\r\n      };\r\n      \r\n    render() {\r\n        var values = this.state.valueForm\r\n        return (<div className =\"container\">\r\n            <div className=\"searchComp\">\r\n                  <form>\r\n                    <input type=\"text\" value={this.state.valueForm} onChange={this.handleChangeForm}></input>\r\n                    \r\n                      <Link to={`${this.state.valueForm}`}>\r\n                        <button onClick={this.handleSubmit}>\r\n                            search a name\r\n                        </button></Link>\r\n                      <Route path={`${this.state.valueForm}`} render={(props) => <Single {...props} data={nameData}/>}/>\r\n                \r\n                  </form>\r\n                </div>   \r\n            \r\n          \r\n          \r\n            <div className=\"column left\">\r\n              <div className=\"dropdown-list\">\r\n                <form>\r\n                  How to sort the data \r\n                <select value={this.state.value_dd} onChange={this.handleChange} className=\"dd-btn\">\r\n                  <option value_dd=\"satunnainen\">Satunnianen järjestys</option>\r\n                  <option value_dd=\"määrä\">Määrien mukaan</option>\r\n                  <option value_dd=\"aakkonen\">Aakkosjärjestys</option>\r\n                </select>\r\n              </form>\r\n              </div>\r\n              \r\n            {nameData.names.map((name) => { return <li>{name.name} ja {name.amount}</li>; })}\r\n           </div>\r\n           <div className=\"column right\">\r\n           <VictoryPie\r\n           colorScale={[\"#f6f6f6\", \"#8ff7bc\",  \"#333333\", \"#990100\",\"#d28efa\", \"#b90504\", \"#f7f28f\", \"#8fc0f7\" ]}\r\n            data = {nameData.names} x=\"name\" y =\"amount\"\r\n            innerRadius={80}\r\n          />\r\n           </div>\r\n            </div>\r\n    )\r\n    } \r\n}\r\n\r\nexport default Listing\r\n","C:\\Users\\Milla\\Desktop\\name-app\\src\\components\\Single.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":92,"column":13,"nodeType":"33","messageId":"34","endLine":92,"endColumn":19},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'values' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]